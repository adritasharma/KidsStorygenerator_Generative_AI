{
  "name": "AI Story Generator with Personalized Character and Voice",
  "description": "Create a Python Dash app using Dash Bootstrap Components that generates personalized children's stories with optional images, narration, and PDF download based on user inputs or uploaded photos.",
  "instructions": [
    "Use Python Dash with `dash-bootstrap-components` for the UI. Ensure mobile responsiveness with Bootstrap grid layout.",
    "",
    "### UI Inputs",
    "- Child’s Name (text input)",
    "- Age (number input)",
    "- Gender (dropdown: Boy, Girl, Other)",
    "- Language Selection (dropdown: English, Hindi, Bengali, etc.)",
    "- Upload a child’s photo (optional via `dcc.Upload`)",
    "",
    "- If photo is NOT uploaded, show manual character creation options:",
    "    - Skin Color (dropdown)",
    "    - Ethnicity (dropdown: Asian, African, Caucasian, Latino, etc.)",
    "    - Hair Color (dropdown: Black, Brown, Blonde, Red)",
    "    - Hair Length (Short, Medium, Long)",
    "    - Option to save this appearance as a reusable profile",
    "",
    "- Moral of the story (optional dropdown: Kindness, Honesty, Courage, Gratitude, Friendship)",
    "",
    "### Character Analysis (Image Understanding)",
    "- If image is uploaded, use BLIP or CLIP (HuggingFace models) to extract descriptive features:",
    "    - Age group estimation",
    "    - Hair type / color",
    "    - Clothing style / color",
    "    - High-level facial features (avoid anything sensitive)",
    "    - Scene or setting clues if present",
    "",
    "- Construct a natural language description of the character based on the above",
    "- Pass this description into the LLM to incorporate into the story as the main character",
    "",
    "### Story Generation Logic",
    "- Use an LLM (OpenAI GPT-4 or equivalent) to generate a 3–4 paragraph moral story",
    "- The child (based on uploaded photo or manually defined character) should be the main character",
    "- The selected moral should be embedded as a theme",
    "- The story should be appropriate for the selected age and gender",
    "- Translate or generate in the selected language (e.g., Hindi, Bengali)",
    "",
    "### Story Editing & Customization",
    "- After the story is generated, display it in an editable `dcc.Textarea`",
    "- Include a 'Regenerate Story' button that allows modifying based on user-edits or new prompt",
    "",
    "### Voice Narration (Optional)",
    "- Provide a 'Listen to Story' button",
    "- Use a TTS engine (e.g., ElevenLabs, Coqui TTS, gTTS)",
    "- Generate narration in selected language and stream or download as audio",
    "",
    "### Optional: Visual Story Images",
    "- Use DALL·E, Stable Diffusion, or other models to generate 2–3 supporting illustrations",
    "- Prompt images using character and setting extracted from story",
    "- Keep visual consistency if possible (ControlNet / IP-Adapter optional)",
    "",
    "### PDF Export",
    "- Add a 'Download Story as PDF' button",
    "- Combine text and images using `reportlab`, `pdfkit`, or `WeasyPrint`",
    "",
    "### Tech Stack Recommendations",
    "- Dash + dash-bootstrap-components for UI",
    "- HuggingFace Transformers for BLIP / CLIP",
    "- OpenAI API or open LLMs for story generation",
    "- TTS APIs (ElevenLabs, Coqui, or gTTS) for voice narration",
    "- PIL + PDF libraries for exporting story",
    "- Modularize code: separate callbacks, layout, utilities"
  ]
}
